/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/users_ajax.js":
/*!************************************!*\
  !*** ./resources/js/users_ajax.js ***!
  \************************************/
/***/ (() => {

eval("$(document).ready(function (e) {\n  $('.sort_name').on('click', function () {\n    var sort = $('.sort_name').attr('data-sort');\n\n    if (sort == 'ASC') {\n      $(this).attr('data-sort', 'DESC');\n      $('.sort_type').val('ASC');\n      $('.sort_name i').removeClass('fa-sort-down');\n      $('.sort_name i').removeClass('fa-sort');\n      $('.sort_name i').addClass('fa-sort-up');\n    } else {\n      $(this).attr('data-sort', 'ASC');\n      $('.sort_type').val('DESC');\n      $('.sort_name i').addClass('fa-sort-down');\n      $('.sort_name i').removeClass('fa-sort');\n      $('.sort_name i').removeClass('fa-sort-up');\n    }\n\n    loadDataUser();\n  });\n  $('.sort_ID').on('click', function () {\n    var sort = $('.sort_ID').attr('data-sort');\n\n    if (sort == 'ASC') {\n      $(this).attr('data-sort', 'DESC');\n      $('.sort_type_id').val('ASC');\n      $('.sort_ID i').removeClass('fa-sort-down');\n      $('.sort_ID i').removeClass('fa-sort');\n      $('.sort_ID i').addClass('fa-sort-up');\n    } else {\n      $(this).attr('data-sort', 'ASC');\n      $('.sort_type_id').val('DESC');\n      $('.sort_ID i').addClass('fa-sort-down');\n      $('.sort_ID i').removeClass('fa-sort');\n      $('.sort_ID i').removeClass('fa-sort-up');\n    }\n\n    loadDataUser();\n  });\n  loadDataUser();\n\n  function loadDataUser() {\n    var sort = $('.sort_type').val();\n    var sort_ID = $('.sort_type_id').val();\n    $.ajax({\n      url: '/users-ajax/getDataTable',\n      type: \"GET\",\n      data: {\n        sort: sort,\n        sort_ID: sort_ID\n      },\n      success: function success(res) {\n        // console.log(res);\n        var html = '';\n        var data = res.data;\n        $.each(data, function (k, v) {\n          html += '<tr>';\n          html += '<td>' + v.id + '</td>';\n          html += '<td>' + v.name + '</td>';\n          html += '<td>' + v.email + '</td>';\n          html += ' <td>' + v.status + '</td>';\n          html += ' <td>' + v.posts.length + '</td>';\n          html += ' <td>' + v.comments.length + '</td>';\n          html += '<td>';\n          html += '<button type=\"button\" name=\"button\" class=\"btn btn-secondary edit_user\" data-id=\"' + v.id + '\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit User\"><i class=\"fas fa-edit\"></i></button>';\n          html += '<button type=\"button\" name=\"button\" class=\"btn btn-danger delete_user\" data-id=\"' + v.id + '\" data-name=\"' + v.name + '\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete User\"><i class=\"fas fa-trash-alt\"></i></button>';\n          html += '</td>';\n          html += '</tr>';\n        });\n        $('tbody').html(html);\n      }\n    });\n  }\n\n  function searchName() {\n    $(\"#search-bar\").keyup(function (e) {\n      var name = $(\"#search-bar\").val();\n      console.log(name);\n\n      if (name.length == 0) {\n        loadDataUser();\n      } else {\n        $.ajax({\n          url: \"/users-ajax/search-name\",\n          type: \"POST\",\n          data: {\n            name: name\n          },\n          success: function success(res) {\n            var html = '';\n            var data = res.data;\n            $.each(data, function (k, v) {\n              html += '<tr>';\n              html += '<td>' + v.id + '</td>';\n              html += '<td>' + v.name + '</td>';\n              html += '<td>' + v.email + '</td>';\n              html += '<td>' + v.created_at + '</td>';\n              html += ' <td>' + v.status + '</td>';\n              html += ' <td>' + v.posts.length + '</td>';\n              html += ' <td>' + v.comments.length + '</td>';\n              html += '<td>';\n              html += '<a href=\"/users/' + v.id + '/comments\" type=\"button\" class=\"btn btn-info\">Show C</a>';\n              html += '</td>';\n              html += '</tr>';\n            });\n            $('tbody').html(html);\n          }\n        });\n      }\n    });\n  }\n\n  function searchPostTotal() {\n    $(\"#search-bar\").keyup(function (e) {\n      var content = $(\"#search-bar\").val();\n\n      if (content.length == 0) {\n        loadDataUser();\n      } else {\n        $.ajax({\n          url: \"/users-ajax/search-post-total\",\n          type: \"post\",\n          data: {\n            count: content\n          },\n          success: function success(res) {\n            var html = '';\n            var data = res.data;\n            $.each(data, function (k, v) {\n              html += '<tr>';\n              html += '<td>' + v.id + '</td>';\n              html += '<td>' + v.name + '</td>';\n              html += '<td>' + v.email + '</td>';\n              html += '<td>' + v.created_at + '</td>';\n              html += ' <td>' + v.status + '</td>';\n              html += ' <td>' + v.posts.length + '</td>';\n              html += ' <td>' + v.comments.length + '</td>';\n              html += '<td>';\n              html += '<a href=\"/users/' + v.id + '/comments\" type=\"button\" class=\"btn btn-info\">Show C</a>';\n              html += '</td>';\n              html += '</tr>';\n            });\n            $('tbody').html(html);\n          }\n        });\n      }\n    });\n  }\n\n  function searchCommentTotal() {\n    $(\"#search-bar\").keyup(function (e) {\n      var content = $(\"#search-bar\").val();\n\n      if (content.length == 0) {\n        loadDataUser();\n      } else {\n        $.ajax({\n          url: \"/users-ajax/search-comment-total\",\n          type: \"post\",\n          data: {\n            count: content\n          },\n          success: function success(res) {\n            var html = '';\n            var data = res.data;\n            $.each(data, function (k, v) {\n              html += '<tr>';\n              html += '<td>' + v.id + '</td>';\n              html += '<td>' + v.name + '</td>';\n              html += '<td>' + v.email + '</td>';\n              html += '<td>' + v.created_at + '</td>';\n              html += ' <td>' + v.status + '</td>';\n              html += ' <td>' + v.posts.length + '</td>';\n              html += ' <td>' + v.comments.length + '</td>';\n              html += '<td>';\n              html += '<a href=\"/users/' + v.id + '/comments\" type=\"button\" class=\"btn btn-info\">Show C</a>';\n              html += '</td>';\n              html += '</tr>';\n            });\n            $('tbody').html(html);\n          }\n        });\n      }\n    });\n  }\n\n  $('#type-search').change(function () {\n    type = $(this).val();\n    console.log(type);\n\n    if (type == 0) {\n      searchName();\n    } else if (type == 1) {\n      searchPostTotal();\n    } else {\n      searchCommentTotal();\n    }\n  });\n  $('#createUser').on('click', function () {\n    $('#modal-create').modal('show');\n    $('#button-finish').fadeOut();\n  }); // Add New user\n\n  $('#button-create').on('click', function () {\n    var form = new FormData($('#form-user')[0]);\n    $.ajax({\n      type: \"post\",\n      url: \"/users/storeAjax\",\n      data: form,\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      success: function success(response) {\n        console.log(response);\n\n        if (response) {\n          var html = '<p class=\"text-success\">' + response + '</p>';\n          $('#notication').html(html);\n          $('#form-user')[0].reset();\n          $('#form-user').css('opacity', 1);\n          $('#button-create').attr('disabled', false);\n          $('#form-user').attr('disabled', false);\n          $('#button-create').fadeOut();\n          $('#button-finish').fadeIn();\n        } else {\n          var html = '<p class=\"text-danger\">Add New User Failed!!!</p>';\n          $('#notication').html(html);\n          $('#form-user').css('opacity', 1);\n          $('#button-submit').attr('disabled', false);\n          $('#form-user').attr('disabled', false);\n          $('#button-create').fadeOut();\n          $('#button-finish').fadeIn();\n        }\n\n        loadDataUser();\n      },\n      error: function error(e) {\n        console.log(e);\n        var html = '<p class=\"text-danger\">Create / Update User Failed!</p>';\n        $('#notication').html(html);\n        $('#form-group-product').css('opacity', 1);\n        $('#button-create').attr('disabled', false);\n        $('#form-group-product').attr('disabled', false);\n      }\n    });\n  }); //Delete\n\n  $(document).on('click', '.delete_user', function () {\n    $('tr').removeClass('choose-group');\n    var id = $(this).attr('data-id');\n    var name = $(this).attr('data-name');\n    $('#modal-delete').modal('show');\n    $('#button-finish-delete').fadeOut();\n    $('#modal-delete .modal-title').text('Delete User');\n    $('#notication-delete').html('<span>Do you want delete User <b class=\"text-danger\">' + name + '</b>?');\n    $('#button-delete').attr('data-id', id);\n    $('#button-delete').fadeIn();\n    $(this).closest('tr').addClass('choose-group');\n  });\n  $('#button-delete').on('click', function () {\n    var id = $(this).attr('data-id');\n    $.ajax({\n      url: '/users/deleteAjax',\n      type: 'post',\n      dataType: 'json',\n      data: {\n        id: id\n      },\n      success: function success(data) {\n        console.log(data);\n        var html = '';\n\n        if (!data.error) {\n          html += '<span class=\"text-success\">Delete User Successfully!!</span>';\n          $('#button-delete').fadeOut();\n          $('#button-finish-delete').fadeIn();\n        } else {\n          var html = '<span class=\"text-danger\">' + data.message + '</span>';\n        }\n\n        $('#button-delete').attr('disabled', false);\n        $('#notication-delete').html(html);\n        loadDataUser();\n      },\n      error: function error(e) {\n        console.log(e);\n        var html = '<span class=\"text-danger\">User group query error!!</span>';\n        $('#notication-delete').html(html);\n        $('#button-delete').attr('disabled', false);\n      }\n    });\n  });\n  $(document).on('click', '.edit_user', function () {\n    $('#modal-update').modal('show');\n    $('#button-finish-update').fadeOut();\n    $('#button-update').fadeIn();\n    var id = $(this).attr('data-id');\n    $.ajax({\n      url: '/users-ajax/getDataEdit',\n      type: 'GET',\n      dataType: 'json',\n      data: {\n        id: id\n      },\n      success: function success(data) {\n        if (data) {\n          $('#id_update').val(data.id);\n          $('#name_update').val(data.name);\n          $('#email_update').val(data.email);\n          var now = new Date(data.birthday);\n          var day = (\"0\" + now.getDate()).slice(-2);\n          var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n          var today = now.getFullYear() + \"-\" + month + \"-\" + day;\n          $('#birthday_update').val(today);\n          var html1 = '';\n\n          if (data.status == 0) {\n            html1 += '<option value=\"' + data.status + '\" selected disabled>Active</option>';\n            html1 += '<option value=\"1\">No Active</option>';\n          } else {\n            html1 += '<option value=\"0\">Active</option>';\n            html1 += '<option value=\"' + data.status + '\" selected disabled>No Active</option>';\n          }\n\n          $('#status_update').html(html1);\n          $('#status_update').val(data.status);\n          $('#avatar_update').text(data.avatar);\n        } else {\n          var html = '<span class=\"text-danger\">' + data.message + '</span>';\n          $('#notication-update').html(html);\n        }\n\n        loadDataUser();\n      },\n      error: function error(e) {\n        console.log(e);\n        var html = '<span class=\"text-danger\">User group query error!!</span>';\n        $('#notication-update').html(html);\n        $('#button-update').attr('disabled', false);\n      }\n    });\n  });\n  $('#button-update').on('click', function () {\n    var form = new FormData($('#form-user-update')[0]);\n    $.ajax({\n      url: '/users-ajax/updateUser',\n      type: 'post',\n      dataType: 'json',\n      data: form,\n      contentType: false,\n      processData: false,\n      success: function success(data) {\n        console.log(data);\n        var html = '';\n\n        if (!data.error) {\n          html += '<span class=\"text-success\">Update User Successfully!!</span>';\n          $('#button-update').fadeOut();\n          $('#button-finish-update').fadeIn();\n        } else {\n          var html = '<span class=\"text-danger\">' + data.message + '</span>';\n        }\n\n        $('#button-update').attr('disabled', false);\n        $('#notication-update').html(html);\n        $('#button-finish-update').fadeIn();\n        loadDataUser();\n      },\n      error: function error(e) {\n        console.log(e);\n        var html = '<span class=\"text-danger\">User group query error!!</span>';\n        $('#notication-update').html(html);\n        $('#button-update').attr('disabled', false);\n      }\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/users_ajax.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/users_ajax.js"]();
/******/ 	
/******/ })()
;